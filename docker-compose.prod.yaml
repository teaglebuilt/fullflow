version: '3.5'
services:
  traefik:
    image: traefik:v2.3
    ports:
      - 80:80
    restart: always
    volumes:
      - var/run/docker.sock:/var/run/docker.sock.ro
    command:
      - --providers.docker
      - providers.docker.exposedbydefault=false
      - entrypoints.http.address:=80
      - --accesslog
      - --log

  server:
    build:
      context: .
      dockerfile: Dockerfile.server
    image: jupyter
    container_name: jupyter
    ports:
     - "9888:8888"
    volumes:
     - ./:/opt/dev/
    environment:
      KG_URL: http://jupyter-kernel:8888
      KG_AUTH_TOKEN: colonels
    command: >
      jupyter lab
      --NotebookApp.ip=0.0.0.0
      --NotebookApp.session_manager_class=nb2kg.managers.SessionManager
      --NotebookApp.kernel_manager_class=nb2kg.managers.RemoteKernelManager
      --NotebookApp.kernel_spec_manager_class=nb2kg.managers.RemoteKernelSpecManager
      --allow-root

  kernel_gateway:
    build:
      context: containers/gateway
    image: jupyter-kernel
    container_name: gateway
    ports:
     - "9889:8888"
    volumes:
     - ./:/opt/dev/
    environment:
      KG_ALLOW_ORIGIN: '*'
      KG_LIST_KERNELS: "True"
      KG_AUTH_TOKEN: poop
    command: >
      jupyter kernelgateway
      --KernelGatewayApp.ip=0.0.0.0
      --KernelGatewayApp.log_level=DEBUG

  webserver:
    image: teaglebuilt/fullflow:local
    restart: always
    depends_on:
      - postgres
    volumes:
      - ./dags:/usr/local/airflow/dags
      - ./src:/usr/local/airflow/src
      - ./logs:/usr/local/airflow/logs
    ports:
      - 8099:8080
    env_file: .env
    environment:
      - ENVIRONMENT=docker
    networks:
      - fullflow
    command: webserver

  scheduler:
    image: teaglebuilt/fullflow:local
    restart: always
    depends_on:
      - webserver
    volumes:
      - ./dags:/usr/local/airflow/dags
      - ./src:/usr/local/airflow/src
      - ./logs:/usr/local/airflow/logs
    env_file: .env
    environment:
      - ENVIRONMENT=docker
    networks:
      - fullflow
    command: scheduler

  postgres:
    image: bitnami/postgresql:latest
    hostname: postgres
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=postgresql
      - POSTGRES_DB=airflow
    ports:
      - 5432:5432
    networks:
      - fullflow

networks:
  fullflow:
    external: false