apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-server
  labels:
    app: {{ .Release.Name }}
    component: {{ .Release.Name }}-prometheus
    release: {{ .Release.Name }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
spec:
  selector:
    matchLabels:
      app: {{ .Release.Name }}
      component: {{ .Release.Name }}-prometheus
  replicas: 1
  strategy:
{{ toYaml .Values.prometheus.strategy | indent 4 }}
  template:
    metadata:
      name: prometheus-server
      labels:
        app: {{ .Release.Name }}
        component: {{ .Release.Name }}-prometheus
    spec:
      serviceAccountName: {{ .Values.prometheus.serviceAccount }}
      containers:
      - name: prometheus
        image: {{ .Values.prometheus.image }}
        imagePullPolicy: Always
        args:
        {{- if eq .Values.global.environment "dev" }}
        - --web.enable-lifecycle
        - --web.route-prefix=/
        - --web.external-url=http://{{ .Values.global.hostname }}:9090/prometheus
        - --config.file=/etc/prometheus/prometheus.yml
        {{ end }}
        ports:
        - name: ui
          containerPort: 9090
        resources:
{{ toYaml .Values.prometheus.resources | indent 10 }}
        securityContext:
          runAsUser: {{ .Values.prometheus.securityContext.runAsUser }}
        volumeMounts:
        - name: storage-volume
          mountPath: {{ .Values.prometheus.volumeMounts.data }}
        - name: config
          mountPath: {{ .Values.prometheus.volumeMounts.config }}
      volumes:
{{ toYaml .Values.prometheus.volumes | indent 6 }}