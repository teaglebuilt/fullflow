kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ .Release.Name }}-pgbouncer
  labels:
    tier: airflow
    component: pgbouncer
    release: {{ .Release.Name }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    heritage: {{ .Release.Service }}
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      tier: airflow
      component: pgbouncer
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        tier: airflow
        component: pgbouncer
        release: {{ .Release.Name }}
    spec:
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
      restartPolicy: Always
      containers:
        - name: pgbouncer
          image: {{ .Values.global.pgbouncer.image }}
          imagePullPolicy: IfNotPresent
          command:
            - pgbouncer
            - -u
            - pgbouncer
            - /etc/pgbouncer/pgbouncer.ini
          resources:
{{ toYaml .Values.deployment.postgres.resources | indent 12 }}
          ports:
            - name: pgbouncer
              containerPort: {{ .Values.deployment.postgres.ports.pgbouncer }}
          livenessProbe:
            tcpSocket:
              port: {{ .Values.deployment.postgres.ports.pgbouncer }}
          readinessProbe:
            tcpSocket:
              port: {{ .Values.deployment.postgres.ports.pgbouncer }}
          volumeMounts:
            - name: pgbouncer-config
              subPath: pgbouncer.ini
              mountPath: /etc/pgbouncer/pgbouncer.ini
              readOnly: true
            - name: pgbouncer-config
              subPath: users.txt
              mountPath: /etc/pgbouncer/users.txt
              readOnly: true
        - name: metrics-exporter
          image: {{ .Values.global.metrics.postgres.image }}
          env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-pgbouncer-stats
                  key: connection
          ports:
            - name: metrics
              containerPort: {{ .Values.deployment.postgres.ports.pgbouncerScrape }}
          livenessProbe:
            exec:
              command:
                - pgbouncer_exporter
                - health
            initialDelaySeconds: 10
            periodSeconds: 10
          readinessProbe:
            exec:
              command:
                - pgbouncer_exporter
                - health
            initialDelaySeconds: 10
            periodSeconds: 10
      volumes:
        - name: pgbouncer-config
          secret:
            secretName: {{ .Release.Name }}-pgbouncer-config
