apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-server
  labels:
    app: prometheus
    component: {{ .Release.Name }}-server
    release: {{ .Release.Name }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    heritage: {{ .Release.Service }}
{{- with .Values.labels }}
{{ toYaml . | indent 4 }}
{{- end }}
spec:
  selector:
    matchLabels:
      app: prometheus
      component: {{ .Release.Name }}-server
  replicas: 1
  strategy:
{{ toYaml .Values.prometheus.strategy | indent 4 }}
  template:
    metadata:
      name: prometheus
      labels:
        app: prometheus
        component: {{ .Release.Name }}-server
    spec:
      serviceAccountName: {{ .Values.prometheus.serviceAccount }}
      containers:
      - name: prometheus
        image: {{ .Values.prometheus.image }}
        imagePullPolicy: Always
        args:
        - --config.file=/etc/prometheus/prometheus.yml
        ports:
        - name: ui
          containerPort: 9090
        resources:
{{ toYaml .Values.prometheus.resources | indent 10 }}
        {{- if .Values.prometheus.securityContext.enabled }}
        securityContext:
          runAsUser: {{ .Values.prometheus.securityContext.runAsUser }}
        {{ end }}
        volumeMounts:
        - name: storage-volume
          mountPath: {{ .Values.prometheus.volumeMounts.data }}
        - name: config
          mountPath: {{ .Values.prometheus.volumeMounts.config }}
        - name: rules
          mountPath: {{ .Values.prometheus.volumeMounts.rules }}
      volumes:
{{ toYaml .Values.prometheus.volumes | indent 6 }}